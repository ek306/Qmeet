# Generated by Django 3.0.6 on 2020-05-27 02:13

from django.db import migrations
from helpers import migrate_run_sql


class Migration(migrations.Migration):

    dependencies = [
        ('qmeet', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            migrate_run_sql.run_sql(
                '''
                DELIMITER $$
                CREATE DEFINER=`qmeet`@`%` PROCEDURE `SP_SplitString`(Value longtext)
                BEGIN
                    DECLARE front TEXT DEFAULT NULL;
                    DECLARE frontlen INT DEFAULT NULL;
                    DECLARE TempValue TEXT DEFAULT NULL;
                    iterator:
                    LOOP  
                    IF LENGTH(TRIM(Value)) = 0 OR Value IS NULL THEN
                    LEAVE iterator;
                    END IF;
                    SET front = SUBSTRING_INDEX(Value,',',1);
                    SET frontlen = LENGTH(front);
                    SET TempValue = TRIM(front);
                    INSERT INTO qmeet.qmeet_selectedcategories (categories) VALUES (TempValue);
                    SET Value = INSERT(Value,1,frontlen + 1,'');
                    END LOOP;
                    END$$
                DELIMITER ;
                '''
            )
        ),
        migrations.RunPython(
            migrate_run_sql.run_sql(
                '''
                DELIMITER $$
                CREATE DEFINER=`qmeet`@`%` PROCEDURE `FilterSP`(
                    IN Username varchar(50),
                    IN Categories varchar(50)
                )
                BEGIN
                    SET SQL_SAFE_UPDATES = 0;
                    DELETE FROM qmeet.qmeet_selectedcategories;
                    call SP_SplitString(Categories);
                    
                    IF(Username <> '' AND Categories = '')
                    THEN 
                        SELECT qs.id, qs.username from qmeet.qmeet_studentProfile qsp
                        join qmeet.qmeet_student qs on qs.id = qsp.student_id
                        where qs.username LIKE concat("%", Username, "%");
                        
                    ELSEIF(Username <> '' AND Categories <> '')
                    THEN
                        select distinct qs.id, qs.username from qmeet.qmeet_studentcategories qsc
                        join qmeet.qmeet_categories qc on qc.id = qsc.categories_id
                        left join qmeet.qmeet_studentprofile qsp on qsp.id = qsc.student_profile_id
                        left join qmeet.qmeet_student qs on qs.id = qsp.student_id
                        where qc.category in (select * from qmeet.qmeet_selectedcategories)
                        and qs.username LIKE concat("%", Username, "%");
                    
                    ELSE
                        select distinct qs.id, qs.username from qmeet.qmeet_studentcategories qsc
                        join qmeet.qmeet_categories qc on qc.id = qsc.categories_id
                        left join qmeet.qmeet_studentprofile qsp on qsp.id = qsc.student_profile_id
                        left join qmeet.qmeet_student qs on qs.id = qsp.student_id
                        where qc.category in (select * from qmeet.qmeet_selectedcategories);
                    END IF;
                END$$
                DELIMITER ;
                '''
            )
        ),
        migrations.RunPython(
            migrate_run_sql.run_sql(
                '''
                DELIMITER $$
                CREATE DEFINER=`qmeet`@`%` PROCEDURE `FilterEventSP`(
                    IN Title varchar(50),
                    IN Categories varchar(50)
                )
                BEGIN
                    SET SQL_SAFE_UPDATES = 0;
                    DELETE FROM qmeet.qmeet_selectedcategories;
                    call SP_SplitString(Categories);
                    
                    IF(Title <> '' AND Categories = '') 
                    THEN
                        select * from qmeet.qmeet_event qe
                        where qe.title like concat("%", Title, "%");
                        
                    ELSEIF(Title <> '' AND Categories <> '')
                    THEN
                        select distinct qe.id, qe.title from qmeet_event qe
                        join qmeet_eventcategories qec on qec.event_id = qe.id
                        join qmeet_categories qc on qc.id = qec.categories_id
                        where qc.category in (select * from qmeet.qmeet_selectedcategories)
                        and qe.title like concat("%", Title, "%");
                    
                    ELSE
                        select distinct qe.id, qe.title from qmeet_event qe
                        join qmeet_eventcategories qec on qec.event_id = qe.id
                        join qmeet_categories qc on qc.id = qec.categories_id
                        where qc.category in (select * from qmeet.qmeet_selectedcategories);
                    END IF;
                END$$
                DELIMITER ;
                '''
            )
        ),
        migrations.RunPython(
            migrate_run_sql.run_sql(
            '''
            DELIMITER $$
            CREATE DEFINER=`qmeet`@`%` PROCEDURE `GetFriendsSP`(
                IN UserID integer
            )
            BEGIN
                select qs2.id, qs2.username from qmeet_student qs 
                join qmeet_studentprofile qsp on qs.id = qsp.student_id
                join qmeet_studentprofile_friends qspf on qsp.id = qspf.from_studentprofile_id
                join qmeet_studentprofile qsp2 on qspf.to_studentprofile_id = qsp2.id
                join qmeet_student qs2 on qsp2.student_id = qs2.id
                where qs.id = UserID;
            END$$
            DELIMITER ;
            '''
            )
        ),
        migrations.RunPython(
            migrate_run_sql.run_sql(
            '''
            DELIMITER $$
            CREATE DEFINER=`qmeet`@`%` PROCEDURE `GetTimetableForUserSP`(
                IN StudentId integer
            )
            BEGIN
                SELECT 	qs.name as semester_name
                , 		qm.name as module_name
                ,		qsm.start_hour
                ,		qsm.end_hour
                ,		LOWER(qsm.abbreviated_day) as abbreviated_day
                , 		qsm.end_hour - qsm.start_hour as duration 
                FROM qmeet.qmeet_semester qs
                JOIN qmeet.qmeet_semestermodule qsm ON qsm.semester_id = qs.id
                JOIN qmeet.qmeet_module qm ON qm.id = qsm.module_id
                JOIN qmeet.qmeet_coursemodules qcm ON qcm.module_id = qm.id
                JOIN qmeet.qmeet_studentprofile qsp ON qsp.course_id = qcm.course_id
                JOIN week_day_order wdo ON wdo.day = qsm.day
                WHERE qsp.student_id = StudentId
                ORDER BY qsm.start_hour, wdo.order;
            END$$
            DELIMITER ;            
            '''
            )
        ),
        migrations.RunPython(
            migrate_run_sql.run_sql(
            '''
            DELIMITER $$
            CREATE DEFINER=`qmeet`@`%` PROCEDURE `GetUnreadMessagesSP`(
                IN UserID int
            )
            BEGIN
                select count(*) as 'un_read'
                from django_messages_message
                where read_at is null and recipient_id=UserID;
            END$$
            DELIMITER ;
            '''
            )
        ),
        migrations.RunPython(
            migrate_run_sql.run_sql(
            '''
            DELIMITER $$
            CREATE DEFINER=`qmeet`@`%` PROCEDURE `RecommendedEventsSP`(
                IN Categories varchar(100)
            )
            BEGIN
                SET SQL_SAFE_UPDATES = 0;
                DELETE FROM qmeet.qmeet_selectedcategories;
                SET SQL_SAFE_UPDATES = 1;
                call SP_SplitString(Categories);
                
                select distinct qe.id, qe.title from qmeet_event qe
                join qmeet_eventcategories qec on qec.event_id = qe.id
                join qmeet_categories qc on qc.id = qec.categories_id
                where qc.category in (select * from qmeet.qmeet_selectedcategories);
            END$$
            DELIMITER ;
            '''
            )
        ),
        migrations.RunPython(
            migrate_run_sql.run_sql(
                '''
                CREATE ALGORITHM=UNDEFINED DEFINER=`qmeet`@`%` SQL SECURITY DEFINER VIEW `week_day_order` 
                AS 
                select 'Monday' AS `day`,1 AS `order` union 
                select 'Tuesday' AS `day`,2 AS `order` union 
                select 'Wednesday' AS `day`,3 AS `order` union 
                select 'Thursday' AS `day`,4 AS `order` union 
                select 'Friday' AS `day`,5 AS `order`;
                '''
            )
        )
    ]
